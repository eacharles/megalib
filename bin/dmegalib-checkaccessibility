#!/bin/bash

# Part of the MEGAlib analysis cluster
# Check if a path for example on an nfs share is accible

# Return:
# Positive: number of available simulation slots


commandhelp() {
  echo ""
  echo "dmegalib-checkaccessibility - list all running instances by run name";
  echo "Copyright by Andreas Zoglauer"
  echo ""
  echo "Usage: dmegalib-checkaccessibility [options]";
  echo ""
  echo "Options:"
  echo "  --path: An absolute remote path"
  echo "  --help: Show this help."
  echo ""
  echo "";
  echo "Example: "
  echo "  dmegalib-checkaccessibility --path=/volumes/atlas/user/simy";
  echo "";
}


# Store command line as array
CMD=( "$@" )

# Check for help
REMOTEPATH=""
for C in "${CMD[@]}"; do
  if [[ ${C} == *-h* ]]; then
    echo ""
    commandhelp
    exit 0
  elif [[ ${C} == *-p*=* ]]; then
    REMOTEPATH=`echo ${C} | awk -F"=" '{ print $2 }'`
  fi
done

# Check if we have a good path
if [[ ${REMOTEPATH} == "" ]]; then
  echo " "
  echo "ERROR: You need to give a remote path"
  commandhelp
  exit 1
fi
if [[ ${REMOTEPATH} != /* ]]; then
  echo " "
  echo "ERROR: The remote path need to be absolute: ${REMOTEPATH}"
  commandhelp
  exit 1
fi


# Read configuration file and extract machines
CFG=~/.dcosima.cfg
if [ ! -f ${CFG} ]; then
  echo "ERROR: No dmegalib configuration file present. Please run dmegalib-setup first."
  exit 1
fi

MACHINES=( `cat ${CFG} | grep "^machine" | gawk '{ print $2 }'` )
REMOTEUSER=( )
REMOTEHOST=( )
REMOTEPORT=( )

#echo " "
#echo "Remote machines setup:"
for (( m=0; m<=$(( ${#MACHINES[*]} -1 )); m++ )); do
  REMOTEUSER[$m]=`echo "${MACHINES[$m]}" | awk -F"@" '{ print $1 }'` 
  REMOTEHOST[$m]=`echo "${MACHINES[$m]}" | awk -F"@" '{ print $2 }'  | awk -F":" '{ print $1 }'` 
  REMOTEPORT[$m]=`echo "${MACHINES[$m]}" | awk -F":" '{ print $2 }'`
  #echo " * Found remote machine: ${MACHINES[$m]} (user: ${REMOTEUSER[$m]}, address: ${REMOTEHOST[$m]}, port: ${REMOTEPORT[$m]})"
done


echo " "
echo "Gathering data... this might take a minute..."
echo " " 

for (( m=0; m<=$(( ${#MACHINES[*]} -1 )); m++ )); do
  
  # Do a quick test if the machine is available:
  REMOTENAME=`ssh -i ${HOME}/.ssh/dmegalib_rsa -q -o ConnectTimeout=5 -p ${REMOTEPORT[$m]} ${REMOTEUSER[$m]}@${REMOTEHOST[$m]} "hostname"`
  if [ "$?" != "0" ]; then
    echo " * Machine ${REMOTEHOST[$m]}, port ${REMOTEPORT[$m]}, user ${REMOTEUSER[$m]}: NOT ACCESSIBLE"
    continue
  fi  

  # Now check if the path is accesible
  REMOTECOMMAND="if [[ -d ${REMOTEPATH} && -x ${REMOTEPATH} ]]; then echo \"YES\"; else   echo \"NO\"; fi;"
  REMOTEDATADIR=$(ssh -i ${HOME}/.ssh/dmegalib_rsa -p ${REMOTEPORT[$m]} ${REMOTEUSER[$m]}@${REMOTEHOST[$m]} 'bash -s' <<< ${REMOTECOMMAND} )
  if [[ "$?" != "0" ]] || [[ ${REMOTEDATADIR} != "YES" ]]; then
    echo " * Machine ${REMOTEHOST[$m]}, port ${REMOTEPORT[$m]}, user ${REMOTEUSER[$m]}: PATH NOT ACCESSIBLE"
    continue
  fi  
  
  echo " * Machine ${REMOTEHOST[$m]}, port ${REMOTEPORT[$m]}, user ${REMOTEUSER[$m]}: OK"
    
done


echo " "

exit 0
